#!env python
"""
Usage:
    update-stack STACK_NAME [options] [PARAMETER...]

Options:
    --region=STRING            aws region to connect to [default: eu-west-1]
    --template=FILENAME or URL

    --warmup-seconds=INT       Seconds to wait for warmup [default: 25]
    --action-timeout=INT       Seconds to wait for the action to finish [default: 300]
    --lenient_look_back=INT    Seconds to look back for events [default: 5]
    --healthy-timeout=SECONDS  Healthy timeout in seconds for instances [default: 600]
"""

import sys
import logging
from docopt import docopt

from aws_updater.stack import StackUpdater

logging.basicConfig(format='%(asctime)s %(levelname)s %(message)s', datefmt='%Y-%m-%dT%H:%M:%S', level=logging.INFO)
logger = logging.getLogger(__name__)

arguments = docopt(__doc__)

stack_name = arguments["STACK_NAME"]
template_filename = arguments["--template"]
region = arguments["--region"]
warmup_seconds = int(arguments["--warmup-seconds"])
lenient_look_back = int(arguments["--lenient_look_back"])
action_timeout = int(arguments["--action-timeout"])
timeout_in_seconds = int(arguments["--healthy-timeout"])

print "update-stack: update/create an aws stack"
print "========================================"


def _dict_from_key_value_list(stack_parameters):
    result = {}
    for parameter in stack_parameters:
        (key, value) = parameter.split("=")
        result[key] = value
    return result

try:
    updater = StackUpdater(stack_name, region, timeout_in_seconds=timeout_in_seconds)
    updater.update_stack(_dict_from_key_value_list(arguments["PARAMETER"]), template_filename)
    updater.update_asgs()
except Exception as e:
    print "[ERROR] %s" % e
    sys.exit(1)
